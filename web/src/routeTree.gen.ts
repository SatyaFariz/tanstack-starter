/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BackendLoginRouteImport } from './routes/backend/login'
import { Route as BackendLayoutRouteImport } from './routes/backend/_layout'
import { Route as BackendLayoutIndexRouteImport } from './routes/backend/_layout/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const BackendRouteImport = createFileRoute('/backend')()
const rootServerRouteImport = createServerRootRoute()

const BackendRoute = BackendRouteImport.update({
  id: '/backend',
  path: '/backend',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BackendLoginRoute = BackendLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => BackendRoute,
} as any)
const BackendLayoutRoute = BackendLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => BackendRoute,
} as any)
const BackendLayoutIndexRoute = BackendLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BackendLayoutRoute,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/backend': typeof BackendLayoutRouteWithChildren
  '/backend/login': typeof BackendLoginRoute
  '/backend/': typeof BackendLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/backend': typeof BackendLayoutIndexRoute
  '/backend/login': typeof BackendLoginRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/backend': typeof BackendRouteWithChildren
  '/backend/_layout': typeof BackendLayoutRouteWithChildren
  '/backend/login': typeof BackendLoginRoute
  '/backend/_layout/': typeof BackendLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/backend' | '/backend/login' | '/backend/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/backend' | '/backend/login'
  id:
    | '__root__'
    | '/'
    | '/backend'
    | '/backend/_layout'
    | '/backend/login'
    | '/backend/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BackendRoute: typeof BackendRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/backend': {
      id: '/backend'
      path: '/backend'
      fullPath: '/backend'
      preLoaderRoute: typeof BackendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/backend/login': {
      id: '/backend/login'
      path: '/login'
      fullPath: '/backend/login'
      preLoaderRoute: typeof BackendLoginRouteImport
      parentRoute: typeof BackendRoute
    }
    '/backend/_layout': {
      id: '/backend/_layout'
      path: '/backend'
      fullPath: '/backend'
      preLoaderRoute: typeof BackendLayoutRouteImport
      parentRoute: typeof BackendRoute
    }
    '/backend/_layout/': {
      id: '/backend/_layout/'
      path: '/'
      fullPath: '/backend/'
      preLoaderRoute: typeof BackendLayoutIndexRouteImport
      parentRoute: typeof BackendLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface BackendLayoutRouteChildren {
  BackendLayoutIndexRoute: typeof BackendLayoutIndexRoute
}

const BackendLayoutRouteChildren: BackendLayoutRouteChildren = {
  BackendLayoutIndexRoute: BackendLayoutIndexRoute,
}

const BackendLayoutRouteWithChildren = BackendLayoutRoute._addFileChildren(
  BackendLayoutRouteChildren,
)

interface BackendRouteChildren {
  BackendLayoutRoute: typeof BackendLayoutRouteWithChildren
  BackendLoginRoute: typeof BackendLoginRoute
}

const BackendRouteChildren: BackendRouteChildren = {
  BackendLayoutRoute: BackendLayoutRouteWithChildren,
  BackendLoginRoute: BackendLoginRoute,
}

const BackendRouteWithChildren =
  BackendRoute._addFileChildren(BackendRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BackendRoute: BackendRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
